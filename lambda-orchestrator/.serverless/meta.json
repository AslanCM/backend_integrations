{
  "/Users/aslancaicdo/Documents/projects/backend jelou ai/lambda-orchestrator/serverless.yml": {
    "versionFramework": "4.21.1",
    "servicePath": "/Users/aslancaicdo/Documents/projects/backend jelou ai/lambda-orchestrator/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "app": "Jelou-AI",
      "org": "Public-org",
      "service": "lambda-orchestrator",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "environment": {
          "CUSTOMERS_API_URL": "http://localhost:3001",
          "ORDERS_API_URL": "http://0.0.0.0:3002",
          "SERVICE_TOKEN": "<REDACTED>"
        }
      },
      "functions": {
        "orchestrator": {
          "handler": "handler.main",
          "events": [
            {
              "httpApi": {
                "path": "/orchestrator/create-and-confirm-order",
                "method": "post"
              }
            }
          ]
        }
      },
      "plugins": [
        "serverless-offline"
      ]
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "environment": {
        "CUSTOMERS_API_URL": "http://localhost:3001",
        "ORDERS_API_URL": "http://0.0.0.0:3002",
        "SERVICE_TOKEN": "<REDACTED>"
      }
    },
    "serviceRawFile": "app: Jelou-AI\norg: Public-org\n\nservice: lambda-orchestrator\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  environment:\n    # CUSTOMERS_API_URL: http://customers-api:3001\n    # ORDERS_API_URL: http://orders-api:3002\n    CUSTOMERS_API_URL: http://localhost:3001\n    ORDERS_API_URL: http://0.0.0.0:3002\n    SERVICE_TOKEN: ${env:SERVICE_TOKEN}\n\nfunctions:\n  orchestrator:\n    handler: handler.main\n    events:\n      - httpApi:\n          path: /orchestrator/create-and-confirm-order\n          method: post\nplugins:\n  - serverless-offline\n",
    "command": [
      "logout"
    ],
    "options": {},
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}